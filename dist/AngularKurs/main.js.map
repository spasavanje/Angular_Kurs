{"version":3,"sources":["./src/app/prva-komponenta/prva-komponenta.component.ts","./src/app/prva-komponenta/prva-komponenta.component.html","./src/environments/environment.ts","./src/app/zaposleni/zaposleni.component.ts","./src/app/zaposleni/zaposleni.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/globalni.service.ts","./src/app/app.module.ts","./src/app/drzave/drzave.component.ts","./src/app/drzave/drzave.component.html","./src/app/app-routing.module.ts","./src/app/transakcije/transakcije.component.ts","./src/app/transakcije/transakcije.component.html","./src/main.ts","./src/app/druga-komponenta/druga-komponenta.component.ts","./src/app/druga-komponenta/druga-komponenta.component.html","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-prva-komponenta',\r\n  templateUrl: './prva-komponenta.component.html',\r\n  styleUrls: ['./prva-komponenta.component.css']\r\n})\r\nexport class PrvaKomponentaComponent implements OnInit {\r\n\r\n  podsjetnik: string[] = [];\r\n  todo: string = '';\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void { }\r\n\r\n  FunkcijaSnimi(): void {\r\n    this.podsjetnik.push(this.todo);\r\n  }\r\n\r\n}\r\n","<h1>Podsjetnik</h1>\r\n\r\n<input type=\"text\" [(ngModel)]=\"todo\" />\r\n\r\n<button (click)=\"FunkcijaSnimi()\">Snimi</button>\r\n\r\n<ul>\r\n  <li *ngFor=\"let element of podsjetnik\">{{ element }}</li>\r\n</ul>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { GlobalniService } from '../globalni.service';\r\n\r\n@Component({\r\n  selector: 'app-zaposleni',\r\n  templateUrl: './zaposleni.component.html',\r\n  styleUrls: ['./zaposleni.component.css']\r\n})\r\nexport class ZaposleniComponent implements OnInit {\r\n\r\n  sviZaposlenici: any;\r\n  sviZaposleniciZaDisplay: any;\r\n\r\n  radnaMjesta: any;\r\n  terminPretrage: string = '';\r\n\r\n  constructor(private globalni: GlobalniService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.globalni.getZaposlenici().subscribe((rezultat: any) => {\r\n      this.sviZaposlenici = rezultat;\r\n      this.sviZaposleniciZaDisplay = rezultat;\r\n      this.radnaMjesta = [...new Set(this.sviZaposlenici.map((element: any) => element.radnoMjesto))];\r\n    });\r\n  }\r\n\r\n  FiltrirajZaposlene(mjesto: any): void {\r\n    this.sviZaposleniciZaDisplay = this.sviZaposlenici.filter((zaposleni: any) => zaposleni.radnoMjesto === mjesto);\r\n  }\r\n\r\n  Pretrazi() {\r\n    this.sviZaposleniciZaDisplay = this.sviZaposlenici.filter((zaposlenik) => zaposlenik.ime.toLowerCase().includes(this.terminPretrage.toLowerCase()) || zaposlenik.radnoMjesto.toLowerCase().includes(this.terminPretrage.toLowerCase()));\r\n  }\r\n\r\n  PonistiPretragu() {\r\n    this.sviZaposleniciZaDisplay = this.sviZaposlenici;\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"container\">\r\n  <div>\r\n    <input type=\"text\" [(ngModel)]=\"terminPretrage\">\r\n    <button (click)=\"Pretrazi()\">Pretrazi</button>\r\n    <button (click)=\"PonistiPretragu()\">Ponisti pretragu</button>\r\n  </div>\r\n\r\n  <button class=\"btn btn-outline-primary\" (click)=\"PonistiPretragu()\">Svi zaposlenici</button>\r\n  <button class=\"btn btn-outline-primary\" *ngFor='let mjesto of radnaMjesta' (click)=\"FiltrirajZaposlene(mjesto)\">\r\n    {{ mjesto }} </button>\r\n\r\n  <table class=\"table table-striped\">\r\n    <thead>\r\n      <tr>\r\n        <th>Ime</th>\r\n        <th>Starost</th>\r\n        <th>Radno mjesto</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngFor=\"let zaposleni of sviZaposleniciZaDisplay\">\r\n        <td> {{ zaposleni.ime }} </td>\r\n        <td> {{ zaposleni.starost }} </td>\r\n        <td> {{ zaposleni.radnoMjesto }} </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  navbarOpen = false;\r\n\r\n  title = 'AngularKurs';\r\n\r\n  toggleNavbar() {\r\n    this.navbarOpen = !this.navbarOpen;\r\n  }\r\n}\r\n","<ul>\r\n  <li> <a routerLink=\"/\"> Početna </a> </li>\r\n  <li> <a routerLink=\"/druga\"> Druga </a> </li>\r\n  <li> <a routerLink=\"/zaposleni\"> Zaposleni </a> </li>\r\n  <li> <a routerLink=\"/transakcije\"> Transakcije </a> </li>\r\n  <li> <a routerLink=\"/drzave\"> Države </a> </li>\r\n</ul>\r\n\r\n<router-outlet></router-outlet>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GlobalniService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  public getZaposlenici() {\r\n    return this.http.get('https://www.angular-kurs.online/api/zaposlenici');\r\n  }\r\n\r\n  public getTransakcije() {\r\n    return this.http.get('https://www.angular-kurs.online/api/transakcije');\r\n  }\r\n\r\n  public getDrzave() {\r\n    return this.http.get('https://www.angular-kurs.online/api/drzave');\r\n  }\r\n\r\n  public pretraziDrzave(terminZaPretragu: string) {\r\n    return this.http.get('https://www.angular-kurs.online/api/drzave/' + terminZaPretragu);\r\n  }\r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { PrvaKomponentaComponent } from './prva-komponenta/prva-komponenta.component';\r\nimport { DrugaKomponentaComponent } from './druga-komponenta/druga-komponenta.component';\r\nimport { ZaposleniComponent } from './zaposleni/zaposleni.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { TransakcijeComponent } from './transakcije/transakcije.component';\r\nimport { DrzaveComponent } from './drzave/drzave.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    PrvaKomponentaComponent,\r\n    DrugaKomponentaComponent,\r\n    ZaposleniComponent,\r\n    TransakcijeComponent,\r\n    DrzaveComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { GlobalniService } from '../globalni.service';\r\n\r\n@Component({\r\n  selector: 'app-drzave',\r\n  templateUrl: './drzave.component.html',\r\n  styleUrls: ['./drzave.component.css']\r\n})\r\nexport class DrzaveComponent implements OnInit {\r\n\r\n  sveDrzave: any;\r\n  terminZaPretragu: string = '';\r\n\r\n  constructor(private api: GlobalniService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.api.getDrzave().subscribe((rezultat) => {\r\n      this.sveDrzave = rezultat;\r\n      console.log(rezultat);\r\n    }, error => console.log('Došlo je do greške, molimo Vas pokušajte ponovo'));\r\n  }\r\n\r\n  Pretrazi(): void {\r\n    this.api.pretraziDrzave(this.terminZaPretragu).subscribe((rezultat) => {\r\n      this.sveDrzave = rezultat;\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <input type=\"text\" [(ngModel)]=\"terminZaPretragu\" />\r\n  <button class=\"btn btn-primary\" (click)=\"Pretrazi()\">Pretraži</button>\r\n\r\n  <table class=\"table table-striped\">\r\n    <thead>\r\n      <tr>\r\n        <th>Ime</th>\r\n        <th>Jezici</th>\r\n        <th>Broj stanovnika</th>\r\n        <th>Zastava</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngFor=\"let drzava of sveDrzave\">\r\n        <td>{{ drzava.name }}</td>\r\n        <td>\r\n          <p *ngFor=\"let jezik of drzava.languages\">{{ jezik.name }} {{ jezik.nativeName }}</p>\r\n        </td>\r\n        <td>{{ drzava.population | number }}</td>\r\n        <td><img src=\"{{ drzava.flag }}\" height=\"50px\"> </td>\r\n      </tr>\r\n\r\n    </tbody>\r\n  </table>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { PrvaKomponentaComponent } from './prva-komponenta/prva-komponenta.component';\r\nimport { DrugaKomponentaComponent } from './druga-komponenta/druga-komponenta.component';\r\nimport { ZaposleniComponent } from './zaposleni/zaposleni.component';\r\nimport { TransakcijeComponent } from './transakcije/transakcije.component';\r\nimport { DrzaveComponent } from './drzave/drzave.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: PrvaKomponentaComponent },\r\n  { path: 'druga', component: DrugaKomponentaComponent },\r\n  { path: 'zaposleni', component: ZaposleniComponent },\r\n  { path: 'transakcije', component: TransakcijeComponent },\r\n  { path: 'drzave', component: DrzaveComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { GlobalniService } from '../globalni.service';\r\n\r\n@Component({\r\n  selector: 'app-transakcije',\r\n  templateUrl: './transakcije.component.html',\r\n  styleUrls: ['./transakcije.component.css']\r\n})\r\nexport class TransakcijeComponent implements OnInit {\r\n\r\n  sveTransakcije: any;\r\n  transakcijeZaDisplay: any;\r\n  kategorije: any;\r\n  ukupno: any;\r\n\r\n  constructor(private api: GlobalniService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.api.getTransakcije().subscribe((rezultati) => {\r\n      this.sveTransakcije = rezultati;\r\n      this.transakcijeZaDisplay = rezultati;\r\n      this.kategorije = [...new Set(this.sveTransakcije.map((transakcija: any) => transakcija.kategorija))];\r\n\r\n      this.ukupno = this.sveTransakcije.reduce((total: any, transakcija: any) => {\r\n        total = total + transakcija.iznos;\r\n        return total;\r\n      }, 0);\r\n    });\r\n  }\r\n\r\n  Filter(kategorija: string): void {\r\n    this.transakcijeZaDisplay = this.sveTransakcije.filter((transakcija) => transakcija.kategorija === kategorija);\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <button *ngFor=\"let kategorija of kategorije\" class=\"btn btn-outline-primary\" (click)=\"Filter(kategorija)\">\r\n    {{ kategorija }} </button>\r\n\r\n  <p>Ukupna vrijednost: {{ ukupno | currency: ' ': ' ' }} KM</p>\r\n\r\n  <table class=\"table table-striped\">\r\n    <thead>\r\n      <tr>\r\n        <th>Datum</th>\r\n        <th>Detalji transakcije</th>\r\n        <th>Kategorija transakcije</th>\r\n        <th>Iznos transakcije</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngFor=\"let transakcija of transakcijeZaDisplay\">\r\n        <td>{{ transakcija.datum | date:'dd.MM.yyyy HH:mm' }}</td>\r\n        <td>{{ transakcija.detaljiTransakcije }}</td>\r\n        <td>{{ transakcija.kategorija }}</td>\r\n        <td>{{ transakcija.iznos | currency: ' ': ' ' }}</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { GlobalniService } from '../globalni.service';\r\n\r\n@Component({\r\n  selector: 'app-druga-komponenta',\r\n  templateUrl: './druga-komponenta.component.html',\r\n  styleUrls: ['./druga-komponenta.component.css']\r\n})\r\nexport class DrugaKomponentaComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n}\r\n","<p>druga-komponenta works!</p>\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}